# Important! to write in csv file, one value should be filtered with jq selector
# <query><;><jq selector>

# Load Test Queries:
#####################################################################
# Number of targets (Load_test):
# sum(up{name="zombie", location="potsdam"});.data.result[0].value[1];Load Test;Number of Targets up
sum(up{job="load_test"});.data.result[0].value[1];Load Test;Number of Targets up

# Total Number of Gauges in all instances
count({__name__=~"Gauge_.+", job="load_test"});.data.result[0].value[1];Load Test;Total number of Gauges found in all Instances

# Grand Total of all Gauges values in all instances
sum({__name__=~"Gauge_.+", job="load_test"});.data.result[0].value[1];Load Test;Grand total of all Gauge values on all Instances


# Average of all Gauges values in all instances
avg({__name__=~"Gauge_.+", job="load_test"});.data.result[0].value[1];Load Test;Average of all Gauge values on all Instances

# Prometheus Queries:
######################################################################
# HTTP SD Number of Discovered Targets
prometheus_sd_discovered_targets{config="load_test",name="scrape"};.data.result[0].value[1];Prometheus;HTTP SD Number of discovered targets

# SD refresh duration
prometheus_sd_refresh_duration_seconds{mechanism="http",quantile="0.99"};.data.result[0].value[1];Prometheus;HTTP SD Refresh duration

# HELP prometheus_target_scrape_pool_targets Current number of targets in this scrape pool.
# TYPE prometheus_target_scrape_pool_targets gauge
prometheus_target_scrape_pool_targets{scrape_job="load_test"};.data.result[0].value[1];Prometheus;Current number of Targets in Scrape Pool

# Time to sync the scrape pool (total time)
prometheus_target_sync_length_seconds_sum{scrape_job="load_test"};.data.result[0].value[1];Prometheus;Total time to sync scrape pool

# Connection failed total all
sum(net_conntrack_dialer_conn_failed_total);.data.result[0].value[1];Prometheus;Connection failed total all
# Connection failed dialer_name load test
sum(net_conntrack_dialer_conn_failed_total{dialer_name="load_test"});.data.result[0].value[1];Prometheus;Connection failed total load test

# Node Exporter Queries:
######################################################################
# HELP node_hwmon_temp_celsius Hardware monitor for temperature (input)
node_hwmon_temp_celsius{chip="thermal_thermal_zone0",sensor="temp0"};.data.result[0].value[1];Node;Temperature Thermal zone 0 temp0
node_hwmon_temp_celsius{chip="thermal_thermal_zone0",sensor="temp1"};.data.result[0].value[1];Node;Temperature Thermal zone 0 temp1

# % CPU busy 1 m % (# HELP node_cpu_seconds_total Seconds the CPUs spent in each mode.)
(sum by(instance) (irate(node_cpu_seconds_total{job="node", mode!="idle"}[1m])) / on(instance) group_left sum by (instance)((irate(node_cpu_seconds_total{job="node"}[1m])))) * 100;.data.result[0].value[1];Node;CPU Busy % 1m

# Sys Load 1 m %:
avg_over_time(node_load1{job="node"}[1m]) * 100 / on(instance) group_left sum by (instance)(irate(node_cpu_seconds_total{job="node"}[1m]));.data.result[0].value[1];Node;Sys Load % 1m

# RAM used %:
100 - ((avg_over_time(node_memory_MemAvailable_bytes{job="node"}[1m]) * 100) / avg_over_time(node_memory_MemTotal_bytes{job="node"}[1m]));.data.result[0].value[1];Node;Ram used % 1m

# SWAP used %:
((avg_over_time(node_memory_SwapTotal_bytes{job="node"}[1m]) - avg_over_time(node_memory_SwapFree_bytes{job="node"}[1m])) / (avg_over_time(node_memory_SwapTotal_bytes{job="node"}[1m]) )) * 100;.data.result[0].value[1];Node;SWAP used % 1m
